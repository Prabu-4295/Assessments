# -*- coding: utf-8 -*-
"""LVADSUSR102_prabu_lab4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SBUg38hPB6nlB1nO4N7kCAehUxcoBYNO
"""

#4 Anomaly Detection

import pandas as pd
from sklearn.ensemble import IsolationForest
import matplotlib.pyplot as plt

# Load data
data = pd.read_csv('/content/drive/MyDrive/social_network.csv')

# Handling missing values with mean
data.fillna(data.mean(), inplace=True)


# Handling duplicates
data = data.drop_duplicates()

# EDA
print(data.describe())
print(data.info())
print(data.head())


# no need to remove outliers beacuse it might be the anomaly


# Assign X
X = data[['login_activity', 'posting_activity', 'social_connections', 'suspicious_activity']]

# Isolation Forest algorithm
isolation_forest = IsolationForest(contamination=0.1, random_state=42)  # Increase contamination to detect more anomalies
isolation_forest.fit(X)
outlier_scores = isolation_forest.decision_function(X)
predicted_labels = isolation_forest.predict(X)

# initiating outlier scores and predicted labels
data['outlier_score'] = outlier_scores
data['predicted_label'] = predicted_labels

# anomalies and non-anomalies
anomalies = data[data['predicted_label'] == -1]
non_anomalies = data[data['predicted_label'] == 1]

# Plot anomalies
plt.figure(figsize=(10, 6))
plt.scatter(anomalies['login_activity'], anomalies['posting_activity'], color='red', label='Anomalies')
plt.scatter(non_anomalies['login_activity'], non_anomalies['posting_activity'], color='blue', label='Non-Anomalies')
plt.xlabel('Login Activity')
plt.ylabel('Posting Activity')
plt.title('Anomaly Detection: Login vs Posting Activity')
plt.legend()
plt.show()